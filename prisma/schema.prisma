//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum SpaceUserRole {
  USER
  ADMIN
}

model Space {
  id        String      @id() @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt()
  name      String
  slug      String      @unique()
  members   SpaceUser[]
  lists     List[]
}

model SpaceUser {
  id        String        @id() @default(uuid())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt()
  space     Space         @relation(fields: [spaceId], references: [id], onDelete: Cascade)
  spaceId   String
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  role      SpaceUserRole

  @@unique([userId, spaceId])
}

model User {
  id       String      @id() @default(cuid())
  email    String      @unique()
  password String
  name     String?
  spaces   SpaceUser[]
  todos    Todo[]
  lists    List[]
}

model List {
  id        String   @id() @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  space     Space    @relation(fields: [spaceId], references: [id], onDelete: Cascade)
  spaceId   String
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   String
  title     String
  private   Boolean  @default(false)
  todos     Todo[]
}

model Todo {
  id          String    @id() @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
  owner       User      @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId     String
  list        List      @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId      String
  title       String
  completedAt DateTime?
}
